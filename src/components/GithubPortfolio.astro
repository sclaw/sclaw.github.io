---
type Repo = {
  id: number;
  name: string;
  description: string;
  html_url: string;
};
async function fetchRepos() {
  // Fetch user and org repos
  const userResponse = await fetch("https://api.github.com/users/sclaw/repos");
  const uvmResponse = await fetch("https://api.github.com/orgs/CIROH-UVM/repos");
  const ffrdResponse = await fetch("https://api.github.com/orgs/fema-ffrd/repos");
  const dewResponse = await fetch("https://api.github.com/orgs/dewberry/repos?per_page=100");

  const userRepos: Repo[] = await userResponse.json();
  const uvmRepos: Repo[] = await uvmResponse.json();
  const ffrdRepos: Repo[] = await ffrdResponse.json();
  const dewRepos: Repo[] = await dewResponse.json();

  // Merge into one array
  const repos: Repo[] = [...userRepos, ...uvmRepos, ...ffrdRepos, ...dewRepos];

  // Define the custom order of repositories
  const customOrder = [
    "gpras",
    "duration-over-threshold",
    "hydroshift",
    "probHAND",
    "muskingum-cunge",
    "streamstats_access",
    "FragStatsPy",
    "binary_rivers",
  ];

  // Define image dictionary
  const imageDict: Record<string, string> = {
    gpras: "https://github.com/fema-ffrd/gpras/blob/main/images/logo.png?raw=true",
    "duration-over-threshold": "https://github.com/sclaw/duration-over-threshold/blob/main/images/logo_1.png?raw=true",
    hydroshift: "https://github.com/Dewberry/hydroshift/blob/main/hydroshift/images/logo_base.png?raw=true",
    probHAND: "https://github.com/CIROH-UVM/probHAND/blob/main/images/probHAND_main.jpg?raw=true",
    "muskingum-cunge": "https://github.com/sclaw/muskingum-cunge/blob/main/images/PYMC_logo.png?raw=true",
    streamstats_access: "https://github.com/sclaw/streamstats_access/blob/main/images/logo_nobg_txt.png?raw=true",
    FragStatsPy: "https://github.com/sclaw/FragStatsPy/blob/main/images/main.JPG?raw=true",
    binary_rivers: "https://github.com/sclaw/binary_rivers/blob/main/images/logo.png?raw=true",
  };

  // Filter out specific repositories
  const filteredRepos = repos.filter(
    (repo) => !["forecast-workflow", "sclaw.github.io"].includes(repo.name)
  );

  // Sort the repositories based on the custom order
  const sortedRepos = customOrder.map((repoName) =>
    filteredRepos.find((repo) => repo.name === repoName)
  );

  // Combine repos with their image from the dictionary
  const updatedRepos = sortedRepos
    .filter((repo): repo is Repo => !!repo) // remove undefined entries
    .map((repo) => ({
      ...repo,
      imageUrl: imageDict[repo.name] || "https://via.placeholder.com/150", // fallback image
    }));

  return updatedRepos;
}

const updatedRepos = await fetchRepos();

---

<style>

  .repo-list {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    justify-content: center; /* keeps them centered */
  }

  .repo-card {
    background: #f9f9f9;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 16px;
    width: 300px;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .repo-card img {
    width: 100%;
    height: 150px;
    object-fit: contain;
    border-radius: 4px;
    margin-bottom: 12px;
  }

  .repo-card h3 {
    margin: 8px 0;
    font-size: 18px;
    color: var(--accent-light);
    min-height: 48px; /* keeps rows aligned */
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .repo-card p {
    font-size: 14px;
    color: var(--accent-regular);
    min-height: 60px; /* ensures cards align even with short/long descriptions */
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 3; /* limit to 3 lines */
    -webkit-box-orient: vertical;
  }

  .repo-card a {
    margin-top: auto; /* pushes link to bottom */
    text-decoration: none;
    color: var(--accent-light);
    font-weight: bold;
  }

</style>

<section>
  <div class="repo-list">
    {updatedRepos.map((repo) => (
      <div class="repo-card" key={repo.id}>
        <img src={repo.imageUrl} alt={repo.name} />
        <h3>{repo.name}</h3>
        <p>{repo.description}</p>
        <a href={repo.html_url} target="_blank" rel="noopener noreferrer">
          View Repository
        </a>
      </div>
    ))}
  </div>
</section>
